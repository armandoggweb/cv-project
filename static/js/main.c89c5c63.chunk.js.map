{"version":3,"sources":["helper.js","components/Overview.js","components/Form.js","App.js","index.js"],"names":["format","data","name","userName","email","phone","value","submitted","school","titleStudy","dateStudy","company","position","tasks","startDate","endDate","getData","Object","values","filter","input","map","Overview","this","props","info","type","typeInfo","className","e","uniqid","React","Component","Form","state","personal","studies","experience","studiesForms","experienceForms","saveInfo","event","target","index","parseInt","elements","formattedData","temp","i","setState","concat","preventDefault","handleEdit","parentNode","getElementsByTagName","handleRemove","forms","pop","addForm","handleChange","studiesFormsList","id","onSave","onEditBtn","onRemoveBtn","expFormsList","onClick","PersonalForm","onSubmit","htmlFor","defaultValue","onChange","EducationalForm","ExperienceForm","tasksForms","tasksList","ExtensibleField","field","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c89c5c63.chunk.js","sourcesContent":["const format = (data, name) => {\n  if (name === 'personal') {\n    const { userName, email, phone } = data;\n    return ({\n      userName: userName.value,\n      email: email.value,\n      phone: phone.value,\n      submitted: true\n    });\n  } else if (name === 'studies') {\n    const { school, titleStudy, dateStudy } = data;\n    return ({\n      school: school.value,\n      titleStudy: titleStudy.value,\n      dateStudy: dateStudy.value,\n      submitted: true\n    });\n  } else if (name === 'experience') {\n    const { company, position, tasks, startDate, endDate } = data;\n    return ({\n      company: company.value,\n      position: position.value,\n      tasks: getData(tasks),\n      startDate: startDate.value,\n      endDate: endDate.value,\n      submitted: true\n    });\n  }\n}\n\nconst getData = (data) => {\n  if (typeof data === 'object') {\n    const inputs = Object.values(data).filter((input) => input.value && input.value !== '');\n    return inputs.map((input) => input.value);\n  } else {\n    return [];\n  }\n}\nexport { format };","import React from 'react';\nimport uniqid from 'uniqid';\nimport '../index.css';\nexport default class Overview extends React.Component {\n\n  render() {\n    const data = this.props.info;\n    const type = this.props.typeInfo;\n    if (type === 'personal') {\n      const { userName, email, phone } = data;\n      return (\n        <div>\n          <p><span className=\"field\">Name:</span> {userName}</p>\n          <p><span className=\"field\">Email address:</span> {email}</p>\n          <p><span className=\"field\">Phone number:</span> {phone}</p>\n        </div>\n      );\n    } else if (type === 'studies') {\n      const { school, titleStudy, dateStudy } = data;\n      return (\n        <div className=\"render-info\">\n          <p><span className=\"field\">Date of study:</span> {dateStudy}</p>\n          <p><span className=\"field\">School:</span> {school}</p>\n          <p><span className=\"field\">Title of study:</span> {titleStudy}</p>\n        </div>);\n    } else if (type === 'experience') {\n      const { company, position, tasks, startDate, endDate } = data;\n      return (\n        <div className=\"render-info\">\n          <p><span className=\"field\">From:</span> {startDate} <span className=\"field\">Until:</span> {endDate}</p>\n          <p><span className=\"field\">Company:</span> {company}</p>\n          <p><span className=\"field\">Position:</span> {position}</p>\n          <p><span className=\"field\">Tasks:</span> </p>\n          <ul className=\"render-expand-list\">\n            {tasks.map((e) => <li key={uniqid()}>{e}</li>)}\n          </ul>\n          \n        </div>\n      );\n    }\n  }\n}","import React from \"react\";\nimport uniqid from \"uniqid\";\nimport { format } from \"../helper\";\nimport Overview from \"./Overview\";\nimport \"../index.css\";\nexport default class Form extends React.Component {\n  state = {\n    personal: [{}],\n    studies: [],\n    experience: [],\n    studiesForms: [],\n    experienceForms: [],\n  };\n\n  saveInfo = (event) => {\n    const name = event.target.name;\n    const data = this.state[name];\n    const index = parseInt(event.target.elements.index.value);\n    const formattedData = format(event.target.elements, name);\n    if (data[index]) {\n      const temp = data.map((e, i) => {\n        if (i === index) {\n          e = formattedData;\n        }\n        return e;\n      });\n      this.setState({ [name]: temp });\n    } else {\n      this.setState({ [name]: data.concat(formattedData) });\n    }\n    event.preventDefault();\n  };\n\n  handleEdit = (event) => {\n    const name = event.target.name;\n    const index = parseInt(\n      event.target.parentNode.getElementsByTagName(\"input\")[0].value\n    );\n    let temp = this.state[name];\n    temp[index].submitted = false;\n    this.setState({ [name]: temp });\n  };\n\n  handleRemove = (event) => {\n    const name = event.target.name;\n    const forms = this.state[name + \"Forms\"];\n    const index = parseInt(\n      event.target.parentNode.getElementsByTagName(\"input\")[0].value\n    );\n    forms.pop();\n    this.setState({ [name + \"Forms\"]: forms });\n    this.setState({ [name]: this.state[name].filter((e, i) => i !== index) });\n  };\n\n  addForm = (event) => {\n    const name = event.target.name + \"Forms\";\n\n    this.setState({ [name]: this.state[name].concat(\"\") });\n  };\n  handleChange = (event) => {\n    this.setState({ [event.target.name]: [event.target.value] });\n  };\n  render() {\n    const { studiesForms, experienceForms } = this.state;\n    const studiesFormsList = studiesForms.map((id, index) => {\n      return (\n        <EducationalForm\n          key={uniqid()}\n          index={index}\n          onSave={this.saveInfo}\n          onEditBtn={this.handleEdit}\n          onRemoveBtn={this.handleRemove}\n          info={this.state.studies[index] ? this.state.studies[index] : {}}\n        />\n      );\n    });\n    const expFormsList = experienceForms.map((id, index) => {\n      return (\n        <ExperienceForm\n          key={uniqid()}\n          index={index}\n          onSave={this.saveInfo}\n          onEditBtn={this.handleEdit}\n          onRemoveBtn={this.handleRemove}\n          info={\n            this.state.experience[index] ? this.state.experience[index] : {}\n          }\n        />\n      );\n    });\n    return (\n      <div>\n        <h3>Personal information</h3>\n        <div className=\"forms-list\">\n          <PersonalForm\n            key={uniqid()}\n            onSave={this.saveInfo}\n            onEditBtn={this.handleEdit}\n            onRemoveBtn={this.handleRemove}\n            info={this.state.personal[0]}\n          />\n        </div>\n        <h3>Educational information</h3>\n        <div className=\"forms-list\" id=\"studies-list\">\n          {studiesFormsList}\n        </div>\n        <button\n          className=\"btn add\"\n          type=\"button\"\n          name=\"studies\"\n          onClick={this.addForm}\n        ></button>\n\n        <h3>Practical Experience</h3>\n        <div className=\"forms-list\" id=\"experience-list\">\n          {expFormsList}\n        </div>\n        <button\n          className=\"btn add\"\n          type=\"button\"\n          name=\"experience\"\n          onClick={this.addForm}\n        ></button>\n      </div>\n    );\n  }\n}\n\nclass PersonalForm extends Form {\n  componentDidMount() {\n    const { submitted, userName, email, phone } = this.props.info;\n    this.setState({\n      userName: userName,\n      email: email,\n      phone: phone,\n      submitted: submitted,\n    });\n  }\n  render() {\n    const name = \"personal\";\n    const { info, onEditBtn, onSave } = this.props;\n    const { submitted, userName, email, phone } = this.state;\n\n    if (submitted) {\n      return (\n        <div name={name}>\n          <input type=\"hidden\" name=\"index\" value=\"0\" />\n          <Overview info={info} typeInfo={name} />\n          <button\n            className=\"btn edit\"\n            type=\"button\"\n            name={name}\n            onClick={onEditBtn}\n          ></button>\n        </div>\n      );\n    } else {\n      return (\n        <form name={name} onSubmit={onSave}>\n          <input type=\"hidden\" name=\"index\" value=\"0\" />\n          <label htmlFor=\"userName\">Name:</label>\n          <input\n            type=\"text\"\n            name=\"userName\"\n            defaultValue={userName}\n            onChange={this.handleChange}\n          />\n          <br />\n          <label htmlFor=\"email\">Email address:</label>\n          <input\n            type=\"email\"\n            name=\"email\"\n            defaultValue={email}\n            onChange={this.handleChange}\n          />\n          <br />\n          <label htmlFor=\"phone\">Phone number:</label>\n          <input\n            type=\"tel\"\n            name=\"phone\"\n            defaultValue={phone}\n            onChange={this.handleChange}\n          />\n          <br />\n          <input className=\"btn-lg save\" type=\"submit\" value=\"Save\" />\n        </form>\n      );\n    }\n  }\n}\n\nclass EducationalForm extends Form {\n  componentDidMount() {\n    const { submitted, school, titleStudy, dateStudy } = this.props.info;\n    this.setState({\n      school: school,\n      titleStudy: titleStudy,\n      dateStudy: dateStudy,\n      submitted: submitted,\n    });\n  }\n\n  render() {\n    const name = \"studies\";\n    const { info, index, onEditBtn, onRemoveBtn, onSave } = this.props;\n    const { submitted, school, titleStudy, dateStudy } = this.state;\n    if (submitted) {\n      return (\n        <div className=\"\">\n          <input type=\"hidden\" name=\"index\" value={index} />\n          <Overview info={info} typeInfo={name} />\n          <button\n            className=\"btn edit\"\n            type=\"button\"\n            name={name}\n            onClick={onEditBtn}\n          ></button>\n          <button\n            className=\"btn remove\"\n            type=\"button\"\n            name={name}\n            onClick={onRemoveBtn}\n          ></button>\n        </div>\n      );\n    } else {\n      return (\n        <form className=\"list-element\" name={name} onSubmit={onSave}>\n          <input type=\"hidden\" name=\"index\" value={index} />\n          <label htmlFor=\"date-study\">Date of study:</label>\n          <input\n            type=\"date\"\n            name=\"dateStudy\"\n            defaultValue={dateStudy}\n            onChange={this.handleChange}\n          />\n          <br />\n          <label htmlFor=\"school\">School:</label>\n          <input\n            type=\"text\"\n            name=\"school\"\n            defaultValue={school}\n            onChange={this.handleChange}\n          />\n          <br />\n          <label htmlFor=\"title-study\">Title of study:</label>\n          <input\n            type=\"text\"\n            name=\"titleStudy\"\n            defaultValue={titleStudy}\n            onChange={this.handleChange}\n          />\n          <br />\n\n          <div className=\"vertical-center\">\n            <input className=\"btn-lg save\" type=\"submit\" value=\"Save\" />\n            <button\n              className=\"btn remove\"\n              type=\"button\"\n              name={name}\n              onClick={onRemoveBtn}\n            ></button>\n          </div>\n        </form>\n      );\n    }\n  }\n}\n\nclass ExperienceForm extends Form {\n  state = { tasksForms: [] };\n  componentDidMount() {\n    const {\n      company,\n      position,\n      tasks,\n      startDate,\n      endDate,\n      submitted,\n    } = this.props.info;\n    const temp = tasks ? tasks : [];\n    this.setState({\n      company: company,\n      position: position,\n      tasks: temp,\n      startDate: startDate,\n      endDate: endDate,\n      submitted: submitted,\n      tasksForms: temp.map(() => \"\"),\n    });\n  }\n  render() {\n    const name = \"experience\";\n    const { info, index, onEditBtn, onRemoveBtn, onSave } = this.props;\n    const {\n      submitted,\n      company,\n      position,\n      tasks,\n      startDate,\n      endDate,\n    } = this.state;\n    const tasksList = this.state.tasksForms.map((e, index) => {\n      return (\n        <ExtensibleField\n          key={index}\n          name=\"tasks\"\n          onRemoveBtn={this.handleRemove}\n          info={tasks[index] ? tasks[index] : \"\"}\n        />\n      );\n    });\n    if (submitted) {\n      return (\n        <div className=\"\">\n          <input type=\"hidden\" name=\"index\" value={index} />\n          <Overview info={info} typeInfo={name} />\n          <button\n            className=\"btn edit\"\n            type=\"button\"\n            name={name}\n            onClick={onEditBtn}\n          ></button>\n          <button\n            className=\"btn remove\"\n            type=\"button\"\n            name={name}\n            onClick={onRemoveBtn}\n          ></button>\n        </div>\n      );\n    } else {\n      return (\n        <form className=\"list-element\" name={name} onSubmit={onSave}>\n          <input type=\"hidden\" name=\"index\" value={index} />\n          <label htmlFor=\"start-date\">From:</label>\n          <input\n            type=\"date\"\n            name=\"startDate\"\n            defaultValue={startDate}\n            onChange={this.handleChange}\n          />\n          <br />\n          <label htmlFor=\"end-date\">Until:</label>\n          <input\n            type=\"date\"\n            name=\"endDate\"\n            defaultValue={endDate}\n            onChange={this.handleChange}\n          />\n          <br />\n          <label htmlFor=\"company\">Company:</label>\n          <input\n            type=\"text\"\n            name=\"company\"\n            defaultValue={company}\n            onChange={this.handleChange}\n          />\n          <br />\n          <label htmlFor=\"position\">Position:</label>\n          <input\n            type=\"text\"\n            name=\"position\"\n            defaultValue={position}\n            onChange={this.handleChange}\n          />\n          <br />\n          <label htmlFor=\"tasks\">Main tasks:</label>\n          <div className=\"expand-list\">\n            {tasksList}\n            <button\n              className=\"btn add\"\n              type=\"button\"\n              name=\"tasks\"\n              onClick={this.addForm}\n            ></button>\n          </div>\n\n          <div className=\"vertical-center\">\n            <input className=\"btn-lg save\" type=\"submit\" value=\"Save\" />\n            <button\n              className=\"btn remove\"\n              type=\"button\"\n              name={name}\n              onClick={onRemoveBtn}\n            ></button>\n          </div>\n        </form>\n      );\n    }\n  }\n}\n\nclass ExtensibleField extends Form {\n  state = {\n    field: \"\",\n  };\n  componentDidMount() {\n    this.setState({ field: this.props.info });\n  }\n\n  handleChange(event) {\n    this.setState({ field: event.target.value });\n  }\n  render() {\n    const { name, onRemoveBtn } = this.props;\n    const { field } = this.state;\n    return (\n      <div className=\"vertical-center\">\n        <input\n          type=\"text\"\n          name={name}\n          defaultValue={field}\n          onChange={this.handleChange}\n        />\n        <button\n          className=\"btn remove\"\n          type=\"button\"\n          name={name}\n          onClick={onRemoveBtn}\n        ></button>\n      </div>\n    );\n  }\n}\n","import './App.css';\nimport React from 'react';\nimport Form from './components/Form';\nclass App extends React.Component {\n  render() {\n    return (\n      <div className=\"container\">\n        <h1>Curriculum Vitae</h1>\n        <Form />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}